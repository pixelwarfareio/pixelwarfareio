/*! This file is auto-generated */
// Source: wp-includes/js/twemoji.min.js

var twemoji = (function () {
    "use strict";

    var f = {
        base: "https://twemoji.maxcdn.com/v/12.1.3/",
        ext: ".png",
        size: "72x72",
        className: "emoji",
        convert: {
            fromCodePoint: function (d) {
                d = typeof d === "string" ? parseInt(d, 16) : d;
                if (d < 65536) return a(d);
                return a(55296 + ((d -= 65536) >> 10), 56320 + (1023 & d));
            },
            toCodePoint: i,
        },
        onerror: function () {
            if (this.parentNode) {
                this.parentNode.replaceChild(g(this.alt, false), this);
            }
        },
        parse: function (d, u) {
            u && typeof u !== "function" || (u = { callback: u });

            return (typeof d === "string"
                ? function (d, t) {
                      return o(d, function (d) {
                          var u, f, c = d,
                              e = x(d),
                              a = t.callback(e, t);

                          if (e && a) {
                              c = `<img class="${t.className}" draggable="false" alt="${d}" src="${a}"`;
                              u = t.attributes(d, e);
                              for (f in u) {
                                  if (
                                      u.hasOwnProperty(f) &&
                                      f.indexOf("on") !== 0 &&
                                      c.indexOf(" " + f + "=") === -1
                                  ) {
                                      c += ` ${f}="${u[f].replace(b, n)}"`;
                                  }
                              }
                              c += "/>";
                          }
                          return c;
                      });
                  }
                : function (d, u) {
                      var l = function d(u, f) {
                              var c, e, a = u.childNodes,
                                  t = a.length;
                              while (t--) {
                                  c = a[t];
                                  e = c.nodeType;
                                  if (e === 3) {
                                      f.push(c);
                                  } else if (
                                      e === 1 &&
                                      !("ownerSVGElement" in c) &&
                                      !h.test(c.nodeName.toLowerCase())
                                  ) {
                                      d(c, f);
                                  }
                              }
                              return f;
                          }(d, []),
                          p = l.length;

                      while (p--) {
                          var e = false,
                              a = document.createDocumentFragment(),
                              t = l[p],
                              b = t.nodeValue,
                              n = 0,
                              i, r;

                          while ((i = m.exec(b))) {
                              var s = i.index;
                              if (s !== n) {
                                  a.appendChild(g(b.slice(n, s), true));
                              }

                              var o = i[0],
                                  eCode = x(o),
                                  sUrl = u.callback(eCode, u);

                              n = s + o.length;
                              if (eCode && sUrl) {
                                  r = new Image();
                                  r.onerror = u.onerror;
                                  r.setAttribute("draggable", "false");

                                  var f = u.attributes(o, eCode);
                                  for (var c in f) {
                                      if (f.hasOwnProperty(c) && c.indexOf("on") !== 0) {
                                          r.setAttribute(c, f[c]);
                                      }
                                  }

                                  r.className = u.className;
                                  r.alt = o;
                                  r.src = sUrl;

                                  e = true;
                                  a.appendChild(r);
                              } else {
                                  a.appendChild(g(o, false));
                              }
                          }

                          if (e && n < b.length) {
                              a.appendChild(g(b.slice(n), true));
                          }

                          if (e) {
                              t.parentNode.replaceChild(a, t);
                          }
                      }

                      return d;
                  }
            )(d, {
                callback: u.callback || t,
                attributes: typeof u.attributes === "function" ? u.attributes : r,
                base: typeof u.base === "string" ? u.base : f.base,
                ext: u.ext || f.ext,
                size:
                    u.folder ||
                    (typeof u.size === "number"
                        ? u.size + "x" + u.size
                        : u.size || f.size),
                className: u.className || f.className,
                onerror: u.onerror || f.onerror,
            });
        },
        replace: o,
        test: function (d) {
            m.lastIndex = 0;
            var result = m.test(d);
            m.lastIndex = 0;
            return result;
        },
    };

    var u = { "&": "&amp;", "<": "&lt;", ">": "&gt;", "'": "&#39;", '"': "&quot;" };
    var m = /\p{Emoji}/gu; // simplified emoji regex
    var c = /\uFE0F/g;
    var e = String.fromCharCode(8205);
    var b = /[&<>'"]/g;
    var h = /^(?:iframe|noframes|noscript|script|select|style|textarea)$/i;
    var a = String.fromCharCode;

    function g(d, u) {
        return document.createTextNode(u ? d.replace(c, "") : d);
    }

    function t(d, u) {
        return `${u.base}${u.size}/${d}${u.ext}`;
    }

    function x(d) {
        return i(d.indexOf(e) < 0 ? d.replace(c, "") : d);
    }

    function n(d) {
        return u[d];
    }

    function r() {
        return {};
    }

    function o(d, u) {
        return String(d).replace(m, u);
    }

    function i(d, u) {
        var f = [],
            c = 0,
            e = 0;

        for (var a = 0; a < d.length; ) {
            c = d.charCodeAt(a++);
            if (e) {
                f.push(((65536 + ((e - 55296) << 10) + (c - 56320)).toString(16)));
                e = 0;
            } else if (c >= 55296 && c <= 56319) {
                e = c;
            } else {
                f.push(c.toString(16));
            }
        }

        return f.join(u || "-");
    }

    return f;
})();

// Source: wp-includes/js/wp-emoji.min.js
(function (c, l) {
    c.wp = c.wp || {};
    c.wp.emoji = new (function () {
        var e =
            c.MutationObserver ||
            c.WebKitMutationObserver ||
            c.MozMutationObserver;
        var a = c.document;
        var t = false;
        var r = 0;
        var o = c.navigator.userAgent.indexOf("Trident/7.0") > -1;

        function i() {
            return (
                !a.implementation.hasFeature ||
                a.implementation.hasFeature(
                    "http://www.w3.org/TR/SVG11/feature#Image",
                    "1.1"
                )
            );
        }

        function s() {
            if (!t) {
                if (typeof c.twemoji === "undefined") {
                    if (r > 600) return;
                    c.clearTimeout(n);
                    n = c.setTimeout(s, 50);
                    r++;
                    return;
                }

                var n = (tw = c.twemoji);
                t = true;

                if (e) {
                    new e(function (u) {
                        for (var r = u.length; r--; ) {
                            var e = u[r].addedNodes,
                                t = u[r].removedNodes,
                                n = e.length,
                                a;

                            while (n--) {
                                a = e[n];
                                if (a.nodeType === 3) {
                                    var p = a.parentNode;
                                    if (p && !p.className.includes("wp-exclude-emoji")) {
                                        if (d(a.textContent)) {
                                            f(p);
                                        }
                                    }
                                }
                            }
                        }
                    }).observe(a.body, { childList: true, subtree: true });
                }

                f(a.body);
            }
        }

        function d(u) {
            return (
                !!u &&
                (/[\uDC00-\uDFFF]/.test(u) ||
                    /[\u203C-\u3299]/.test(u))
            );
        }

        function f(u, e) {
            var t;
            if (!l.supports.everything && tw && u) {
                e = e || {};
                t = {
                    base: i() ? l.svgUrl : l.baseUrl,
                    ext: i() ? l.svgExt : l.ext,
                    className: e.className || "emoji",
                    callback: function (u, e) {
                        switch (u) {
                            case "a9":
                            case "ae":
                            case "2122":
                                return false;
                        }

                        return `${e.base}${u}${e.ext}`;
                    },
                    attributes: function () {
                        return { role: "img" };
                    },
                    onerror: function () {
                        this.setAttribute("data-error", "load-failed");
                        this.parentNode.replaceChild(
                            a.createTextNode(this.alt),
                            this
                        );
                    },
                };

                if (typeof e.imgAttr === "object") {
                    t.attributes = function () {
                        return e.imgAttr;
                    };
                }

                tw.parse(u, t);
            }

            return u;
        }

        l && (l.DOMReady ? s() : (l.readyCallback = s));

        return { parse: f, test: d };
    })();
})(window, window._wpemojiSettings);
